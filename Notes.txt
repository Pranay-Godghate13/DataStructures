------------------------------------NOTES-------------------------------------------------
-Adjacency Matrix:
    Cons: - Occupy > space, contain unused data too in form of Zero's.
          - Time complexity=O(v), which is greater than Adjacency list, considering in mind v is very large.
-Edge list is used to sort an array list, used in Minimum spanning tree (MST) Algorithim.
-Implicit graph: Flood fill algorithim.
-BFS time complexity is O(V+E).
-DFS time complexity is O(V+E).
-Prims Algo time complexity is O(Elog(E)).
-Kosaraju's Algo time complexity is O(V+E).
-Topological sort is only applicable on DAC.
-DAC stands for Directed Acyclic graph.
-Dijkstra Algorithim is a greedy algorithim.
-Bellmond ford algorithim is a DP algorithim.
-MST: Minimum spanning tree.
    - Undirected & weighted graph.
    - Subgraph of graph.
    - Cycle absent.
    - min possible edge weight.
-Condition of MST:
    -Prim's Algorithim
        -Node connected.
        -No Cycle.
        -Cost minimum.
-Strongky connected component is we can reach every vertex of component from every other vertex of that component.
-SCC: Strongly connected component.
-SCC ia executed on directed graphs only.

-Kosaraju'a Algorithim
    -Get nodes in stack(Topological order)
    -Transpose the graph.
    -Do DFS according to stack nodes on the transpose graph.

-Kosaraju Algorithim= Topological sort+DFS
